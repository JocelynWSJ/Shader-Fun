#version 150

in vec2 fs_UV;

out vec3 color;

uniform sampler2D u_RenderedTexture;
uniform int u_Time;
uniform ivec2 u_Dimensions;

void main()
{
    float u_Gaussian[121] = float[](

        0.006849,       0.007239,       0.007559,	0.007795,	0.007941,	0.00799,	0.007941,	0.007795,	0.007559,	0.007239,	0.006849,
        0.007239,       0.007653,	0.00799,	0.00824,	0.008394,	0.008446,	0.008394,	0.00824,	0.00799,	0.007653,	0.007239,
        0.007559,	0.00799,	0.008342,	0.008604,	0.008764,	0.008819,	0.008764,	0.008604,	0.008342,	0.00799,	0.007559,
        0.007795,	0.00824,	0.008604,	0.008873,	0.009039,	0.009095,	0.009039,	0.008873,	0.008604,	0.00824,	0.007795,
        0.007941,	0.008394,	0.008764,	0.009039,	0.009208,	0.009265,	0.009208,	0.009039,	0.008764,	0.008394,	0.007941,
        0.00799,	0.008446,	0.008819,	0.009095,	0.009265,	0.009322,	0.009265,	0.009095,	0.008819,	0.008446,	0.00799,
        0.007941,	0.008394,	0.008764,	0.009039,	0.009208,	0.009265,	0.009208,	0.009039,	0.008764,	0.008394,	0.007941,
        0.007795,	0.00824,	0.008604,	0.008873,	0.009039,	0.009095,	0.009039,	0.008873,	0.008604,	0.00824,	0.007795,
        0.007559,	0.00799,	0.008342,	0.008604,	0.008764,	0.008819,	0.008764,	0.008604,	0.008342,	0.00799,	0.007559,
        0.007239,	0.007653,	0.00799,	0.00824,	0.008394,	0.008446,	0.008394,	0.00824,	0.00799,	0.007653,	0.007239,
        0.006849,	0.007239,	0.007559,	0.007795,	0.007941,	0.00799,	0.007941,	0.007795,	0.007559,	0.007239,	0.006849

    );

    color = vec3(0, 0, 0);
    float dx = 1.0 / u_Dimensions.x;
    float dy = 1.0 / u_Dimensions.y;

    vec3 sum_color = vec3(0, 0, 0);
    vec2 start_uv = fs_UV;
    start_uv.x = fs_UV.x - 5 * dx;
    start_uv.y = fs_UV.y - 5 * dy;

    for (int r = 0; r < 11; r++) {
        for (int c = 0; c < 11; c++) {
            //clamp to [0,1]
            if (start_uv.x < 0) {
                start_uv.x = 0;
            }
            if (start_uv.x > 1) {
                start_uv.x = 1;
            }
            if (start_uv.y < 0) {
                start_uv.y = 0;
            }
            if (start_uv.y > 1) {
                start_uv.y = 1;
            }
            vec3 v_color = texture(u_RenderedTexture, start_uv).rgb;
            if ((v_color.x + v_color.y + v_color.z) < (3*0.6)) {
                v_color = vec3(0, 0, 0);
            }
            sum_color += v_color * u_Gaussian[11*r+c];

            start_uv.y += dy;
        }
        start_uv.x += dx;
        start_uv.y = fs_UV.y - 5 * dy;
    }
    color = texture(u_RenderedTexture, fs_UV).rgb + sum_color;
}
